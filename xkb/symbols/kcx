default partial alphanumeric_keys modifier_keys
xkb_symbols "qwerty" {

    name[Group1]= "KCX (Qwerty)";

    include "kcxvar/qwerty(alphabet)"

    key <TLDE> {	[     equal,	at	]	};
    key <AE01> {	[	  1,	numbersign 		]	};
    key <AE02> {	[	  2,	braceleft		]	};
    key <AE03> {	[	  3,	braceright	]	};
    key <AE04> {	[	  4,	quotedbl		]	};
    key <AE05> {	[	  5,	dollar		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	underscore	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[     minus,	exclam	]	};
    key <AE12> {	[     semicolon,	plus		]	};
    replace key <BKSP> { [ grave, percent ] };

    key <AD11> { type[Group1]="ONE_LEVEL", [ BackSpace ] };
    key <AD12> { [ bracketleft, less ] }; 
    key <BKSL> { [ bracketright, greater ]};

    key <AC10> {	[ apostrophe,	colon		]	};
    key <AC11> { type[Group1]="ONE_LEVEL", [ Return ] };
    replace key <RTRN> { [ backslash, bar ] };

    key <AB08> {	[     comma,	ampersand		]	};
    key <AB09> {	[    period,	question		]	};
	key <AB10> { type[Group1] = "ONE_LEVEL", [ Super_R ] };


    replace key <LFSH> { [ slash, asciitilde ] };
    replace key <RTSH> { [ Alt_L ] };
    replace key <TAB> { 
        symbols[Group1] = [ Shift_L ],
        actions[Group1] = [ SetMods(modifiers=Shift)]
    };
    replace key <LALT> { [ Tab, ISO_Left_Tab] };
	replace key <RALT> { [ Escape ] };

    replace key <CAPS> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ Control_L ],
        actions[Group1] = [ SetMods(modifiers=Control) ]
    };
};

partial alphanumeric_keys modifier_keys
xkb_symbols "homerow_sym" {

    include "kcx(qwerty)"
    name[Group1]= "KCX (Homerow Symbols)";

    include "kcxvar/homerow_sym(arrow_becomes_hjkl)"
    include "kcxvar/homerow_sym(d_becomes_delete)"
    include "kcxvar/homerow_sym(a_becomes_home)"
    include "kcxvar/homerow_sym(e_becomes_end)"
    include "kcxvar/homerow_sym(u_becomes_capslock)"
    include "kcxvar/homerow_sym(s_becomes_lfsh)"
};
